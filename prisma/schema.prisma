// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int         @id @default(autoincrement())
  username     String      @unique
  password     String
  email        String
  nick_name    String
  head_pic     String?
  phone_number String?
  is_frozen    Boolean     @default(false)
  is_Admin     Boolean     @default(false)
  create_time  DateTime    @default(now())
  update_time  DateTime    @updatedAt
  role         User_Role[]
  booking      booking[]
}

model Role {
  id          Int                @id @default(autoincrement())
  name        String             @unique
  code        String             @unique
  create_time DateTime           @default(now())
  update_time DateTime           @updatedAt
  user        User_Role[]
  permissions Role_Permissions[]
}

model Permissions {
  id   Int                @id @default(autoincrement())
  role Role_Permissions[]
}

model Role_Permissions {
  id             Int         @id @default(autoincrement())
  role_id        Int
  permissions_id Int
  role           Role        @relation(fields: [role_id], references: [id])
  permissions    Permissions @relation(fields: [permissions_id], references: [id])
}

model User_Role {
  id      Int  @id @default(autoincrement())
  user_id Int
  role_id Int
  user    User @relation(fields: [user_id], references: [id])
  role    Role @relation(fields: [role_id], references: [id])
}

model Meeting_Room {
  id          Int       @id @default(autoincrement())
  name        String    @unique // 会议室名称
  capacity    Int // 容纳人数
  location    String //位置
  equipment   String //设备
  description String // 描述
  is_booked   Boolean   @default(false) //是否被预定
  is_delete   Boolean   @default(false)
  create_time DateTime  @default(now()) //创建时间
  update_time DateTime  @updatedAt //更新时间
  booking     booking[]
}

model dictionary_type {
  id          Int               @id @default(autoincrement())
  type_name   String            @unique
  code        String            @unique
  description String
  items       dictionary_item[]
}

model dictionary_item {
  id          Int              @id @default(autoincrement())
  key         String
  value       String
  description String?
  type_id     Int?
  type        dictionary_type? @relation(fields: [type_id], references: [id])
}

model booking {
  id          Int          @id @default(autoincrement())
  user_id     Int
  room_id     Int
  start_time  DateTime
  end_time    DateTime
  status      String
  note        String?
  create_time DateTime     @default(now())
  update_time DateTime     @updatedAt
  room        Meeting_Room @relation(fields: [room_id], references: [id])
  user        User         @relation(fields: [user_id], references: [id])
}
